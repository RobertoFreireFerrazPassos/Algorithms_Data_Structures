using Algorithms_Data_Structures.Algorithms.Sort;
using BenchmarkDotNet.Attributes;

namespace Benchmark.Benchmarks
{
    /*
        |                     Method |           Mean |         Error |        StdDev |
        |--------------------------- |---------------:|--------------:|--------------:|
        |  SelectionSort_SimpleInput |      39.495 ns |     0.2498 ns |     0.2086 ns |
        |      QuickSort_SimpleInput |     164.930 ns |     1.3201 ns |     1.1702 ns |
        |     BubbleSort_SimpleInput |       7.427 ns |     0.1796 ns |     0.1764 ns |
        |    BubbleSort2_SimpleInput |      10.410 ns |     0.0473 ns |     0.0369 ns |
        |     InsertSort_SimpleInput |      25.731 ns |     0.1496 ns |     0.1326 ns |
        | SelectionSort_ComplexInput | 821,299.889 ns | 2,705.2452 ns | 2,530.4880 ns |
        |     QuickSort_ComplexInput |  40,555.676 ns |   784.2532 ns |   770.2415 ns |
        |    BubbleSort_ComplexInput |   1,060.604 ns |     7.9650 ns |     7.4504 ns |
        |   BubbleSort2_ComplexInput |      10.511 ns |     0.0714 ns |     0.0668 ns |
        |    InsertSort_ComplexInput | 423,621.579 ns | 1,494.1006 ns | 1,324.4813 ns |

    
        |                     Method |           Mean |          Error |         StdDev |         Median |
        |--------------------------- |---------------:|---------------:|---------------:|---------------:|
        |  SelectionSort_SimpleInput |      39.366 ns |      0.1583 ns |      0.1236 ns |      39.354 ns |
        |      QuickSort_SimpleInput |     163.247 ns |      1.2775 ns |      1.1950 ns |     163.166 ns |
        |     BubbleSort_SimpleInput |       8.400 ns |      0.0774 ns |      0.0686 ns |       8.395 ns |
        |    BubbleSort2_SimpleInput |      10.560 ns |      0.1807 ns |      0.1690 ns |      10.537 ns |
        |     InsertSort_SimpleInput |      25.665 ns |      0.0925 ns |      0.0820 ns |      25.673 ns |
        | SelectionSort_ComplexInput | 822,468.415 ns |  4,380.6356 ns |  3,883.3194 ns | 822,130.957 ns |
        |     QuickSort_ComplexInput |  39,838.940 ns |    215.2769 ns |    190.8374 ns |  39,786.639 ns |
        |    BubbleSort_ComplexInput |   1,407.631 ns |      8.1594 ns |      7.6323 ns |   1,406.279 ns |
        |   BubbleSort2_ComplexInput |   1,757.289 ns |      6.3169 ns |      5.9088 ns |   1,757.017 ns |
        |    InsertSort_ComplexInput | 483,116.078 ns | 23,026.7251 ns | 64,947.2867 ns | 459,855.420 ns |
        */

    public class SortAlgorithmsBenchmark
    {
        private int[] simpleInput = new int[] { 10, 64, 80, 30, 70, 25, 25, 12 };        

        [Benchmark]
        public int[] SelectionSort_SimpleInput() => SelectionSort.Sort(simpleInput);

        [Benchmark]
        public int[] QuickSort_SimpleInput() => QuickSort.Sort(simpleInput);

        [Benchmark]
        public int[] BubbleSort_SimpleInput() => BubbleSort.Sort(simpleInput);

        [Benchmark]
        public int[] BubbleSort2_SimpleInput() => BubbleSort.Sort2(simpleInput);

        [Benchmark]
        public int[] InsertSort_SimpleInput() => InsertSort.Sort(simpleInput);

        private int[] complexInput = new int[] {
            10, 64, 80, 30, 70, 25, 25, 12, 22, 11, 25, 45, 70, 90, 25, 12, 43, 11, 34,
            13, 64, 80, 35, 70, 25, 25, 12, 22, 11, 25, 45, 70, 84, 25, 12, 43, 11, 34,
            56, 64, 80, 30, 70, 25, 25, 12, 22, 11, 25, 45, 70, 13, 25, 12, 43, 11, 53,
            23, 64, 80, 24, 70, 25, 25, 12, 22, 11, 25, 45, 70, 95, 25, 12, 43, 11, 34,
            94, 64, 80, 24, 70, 25, 25, 12, 22, 11, 25, 45, 70, 89, 25, 12, 43, 11, 34,
            13, 64, 12, 30, 34, 25, 25, 12, 22, 11, 68, 45, 77, 56, 25, 12, 43, 11, 65,
            10, 64, 98, 35, 70, 25, 25, 12, 22, 11, 46, 45, 47, 90, 25, 12, 43, 11, 34,
            12, 64, 83, 30, 70, 25, 25, 12, 22, 18, 25, 45, 70, 23, 25, 12, 43, 11, 34,
            23, 64, 80, 30, 70, 25, 25, 12, 22, 11, 75, 45, 70, 95, 25, 12, 43, 11, 34,
            13, 64, 80, 30, 70, 25, 25, 12, 22, 11, 75, 45, 70, 84, 25, 12, 43, 11, 34,
            56, 64, 80, 30, 70, 25, 25, 12, 22, 11, 25, 45, 70, 13, 25, 12, 43, 11, 53,
            23, 64, 80, 23, 70, 25, 25, 12, 22, 57, 25, 45, 70, 95, 25, 12, 43, 11, 34,
            94, 64, 80, 30, 70, 25, 25, 12, 22, 11, 25, 45, 70, 89, 25, 12, 43, 11, 34,
            13, 64, 12, 46, 34, 25, 25, 12, 22, 11, 46, 46, 77, 56, 25, 12, 43, 11, 65,
            10, 64, 98, 30, 70, 25, 25, 12, 22, 11, 25, 45, 47, 90, 25, 12, 43, 11, 34,
            12, 64, 83, 34, 70, 25, 25, 12, 22, 18, 25, 34, 70, 23, 25, 12, 43, 11, 34,
            13, 64, 80, 30, 70, 25, 25, 12, 22, 11, 25, 45, 70, 84, 25, 12, 43, 11, 34,
            56, 64, 80, 46, 70, 25, 25, 12, 22, 11, 25, 45, 70, 13, 25, 12, 43, 11, 53,
            23, 64, 80, 30, 70, 25, 25, 12, 22, 11, 25, 45, 70, 95, 25, 12, 43, 11, 34,
            94, 64, 80, 23, 70, 25, 25, 12, 22, 11, 25, 45, 70, 89, 25, 12, 43, 11, 34,
            13, 64, 12, 85, 34, 25, 25, 12, 22, 11, 25, 45, 77, 56, 25, 12, 43, 11, 65,
            10, 64, 98, 30, 70, 25, 25, 12, 22, 11, 25, 46, 47, 90, 25, 12, 43, 11, 34,
            12, 64, 83, 30, 70, 25, 25, 12, 22, 18, 25, 45, 70, 23, 25, 12, 43, 11, 34,
            23, 64, 80, 30, 70, 25, 25, 12, 22, 11, 25, 45, 70, 95, 25, 12, 43, 11, 34,
            94, 64, 80, 30, 70, 25, 25, 12, 22, 11, 25, 46, 70, 89, 25, 12, 43, 11, 34,
            12, 64, 66, 74, 70, 54, 25, 12, 22, 91, 25, 45, 70, 45, 25, 12, 43, 11, 34,
            10, 64, 12, 97, 71, 25, 12, 12, 22, 81, 25, 34, 70, 90, 25, 12, 43, 11, 34,
            89, 64, 80, 30, 70, 25, 25, 12, 22, 11, 25, 45, 54, 12, 25, 12, 43, 11, 38,
            13, 64, 12, 30, 34, 25, 25, 12, 22, 11, 25, 45, 77, 56, 25, 12, 43, 11, 65,
            16, 64, 80, 30, 70, 25, 25, 12, 24, 17, 25, 45, 70, 90, 25, 12, 43, 11, 98,
            13, 64, 12, 30, 34, 25, 25, 12, 22, 11, 25, 45, 77, 56, 25, 12, 43, 11, 65,
            10, 64, 98, 30, 70, 25, 25, 12, 22, 11, 25, 45, 47, 90, 25, 12, 43, 11, 34,
            12, 64, 83, 30, 70, 25, 25, 12, 22, 18, 25, 45, 70, 23, 25, 12, 43, 11, 34,
            23, 64, 80, 30, 70, 25, 25, 12, 22, 11, 25, 45, 70, 95, 25, 12, 43, 11, 34,
            94, 64, 80, 13, 70, 25, 25, 12, 22, 11, 25, 64, 70, 89, 25, 12, 43, 11, 34,
            12, 64, 66, 23, 70, 54, 25, 12, 22, 91, 25, 86, 70, 45, 25, 12, 43, 11, 34,
            23, 64, 80, 25, 70, 25, 25, 12, 22, 11, 25, 45, 70, 95, 25, 12, 43, 11, 34,
            94, 64, 80, 24, 70, 25, 25, 12, 22, 11, 25, 45, 70, 89, 25, 12, 43, 11, 34,
            12, 64, 66, 30, 70, 54, 25, 12, 22, 91, 25, 45, 70, 45, 25, 12, 43, 11, 34,
            10, 64, 12, 30, 71, 25, 12, 12, 22, 81, 25, 34, 70, 90, 25, 12, 43, 11, 34,
            89, 64, 80, 30, 70, 25, 25, 12, 22, 11, 25, 45, 54, 12, 25, 12, 43, 11, 38,
            13, 64, 12, 48, 34, 25, 25, 12, 22, 11, 25, 45, 77, 56, 25, 12, 43, 11, 65,
            16, 64, 80, 80, 70, 25, 25, 12, 24, 17, 25, 86, 70, 90, 25, 12, 43, 11, 98,
            13, 64, 12, 46, 34, 25, 25, 12, 22, 11, 25, 45, 77, 56, 25, 12, 43, 11, 65,
            10, 64, 98, 30, 70, 25, 25, 12, 22, 11, 25, 45, 47, 90, 25, 12, 43, 11, 34,
            12, 64, 83, 34, 70, 25, 25, 12, 22, 18, 25, 68, 70, 23, 25, 12, 43, 11, 34,
            23, 64, 80, 30, 70, 25, 25, 12, 22, 11, 25, 45, 70, 95, 25, 12, 43, 11, 34,
            94, 64, 80, 30, 70, 25, 25, 12, 22, 11, 25, 45, 70, 89, 25, 12, 43, 11, 34,
            12, 64, 66, 45, 70, 54, 25, 12, 22, 91, 25, 45, 70, 45, 25, 12, 43, 11, 34,
            94, 64, 80, 30, 70, 25, 25, 12, 22, 11, 25, 45, 70, 89, 25, 12, 43, 11, 34,
            12, 64, 66, 30, 70, 54, 25, 12, 22, 91, 25, 45, 70, 45, 25, 12, 43, 11, 34,
            10, 64, 12, 47, 71, 25, 12, 12, 22, 81, 25, 57, 70, 90, 25, 12, 43, 11, 34,
            89, 64, 80, 80, 70, 25, 25, 12, 22, 11, 25, 45, 54, 12, 25, 12, 43, 11, 38,
            13, 64, 12, 30, 34, 25, 25, 12, 22, 11, 25, 45, 77, 56, 25, 12, 43, 11, 65,
            16, 64, 80, 30, 70, 25, 25, 12, 24, 17, 25, 45, 70, 90, 25, 12, 43, 11, 98,
            13, 64, 12, 48, 34, 25, 25, 12, 22, 11, 25, 45, 77, 56, 25, 12, 43, 11, 65,
            10, 64, 98, 86, 70, 25, 25, 12, 22, 11, 25, 45, 47, 90, 25, 12, 43, 11, 34,
            12, 64, 83, 23, 70, 25, 25, 12, 22, 18, 25, 86, 70, 23, 25, 12, 43, 11, 34,
            23, 64, 80, 30, 70, 25, 25, 12, 22, 11, 25, 45, 70, 95, 25, 12, 43, 11, 34,
            94, 64, 80, 30, 70, 25, 25, 12, 22, 11, 25, 45, 70, 89, 25, 12, 43, 11, 34,
            12, 64, 66, 10, 70, 54, 25, 12, 22, 91, 25, 45, 70, 45, 25, 12, 43, 11, 34};

        [Benchmark]
        public int[] SelectionSort_ComplexInput() => SelectionSort.Sort(complexInput);

        [Benchmark]
        public int[] QuickSort_ComplexInput() => QuickSort.Sort(complexInput);

        [Benchmark]
        public int[] BubbleSort_ComplexInput() => BubbleSort.Sort(complexInput);

        [Benchmark]
        public int[] BubbleSort2_ComplexInput() => BubbleSort.Sort2(complexInput);

        [Benchmark]
        public int[] InsertSort_ComplexInput() => InsertSort.Sort(complexInput);
    }
}
